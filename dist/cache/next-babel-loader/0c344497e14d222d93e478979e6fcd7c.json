{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useCheckBottom = () => {\n  const {\n    0: isBottom,\n    1: setIsBottom\n  } = useState(false);\n  useEffect(() => {\n    console.log('mount');\n    window.addEventListener('scroll', windowScroll);\n    return () => {\n      console.log('unmount');\n      window.removeEventListener('scroll', windowScroll);\n    };\n  }, []);\n\n  const windowScroll = () => {\n    const windowBottomPosition = window.scrollY + window.innerHeight;\n    const pageBottomPosition = document.getElementsByTagName('main')[0].offsetHeight;\n    windowBottomPosition === pageBottomPosition ? setIsBottom(true) : setIsBottom(false);\n  };\n\n  return isBottom;\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Helpers/useCheckBottom.js"],"names":["useEffect","useState","useCheckBottom","isBottom","setIsBottom","console","log","window","addEventListener","windowScroll","removeEventListener","windowBottomPosition","scrollY","innerHeight","pageBottomPosition","document","getElementsByTagName","offsetHeight"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BH,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AAEA,WAAO,MAAM;AACXJ,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACAC,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC;AACD,KAHD;AAID,GARQ,EAQN,EARM,CAAT;;AAUA,QAAMA,YAAY,GAAG,MAAM;AACzB,UAAME,oBAAoB,GAAGJ,MAAM,CAACK,OAAP,GAAiBL,MAAM,CAACM,WAArD;AACA,UAAMC,kBAAkB,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAApE;AAEAN,IAAAA,oBAAoB,KAAKG,kBAAzB,GAA8CV,WAAW,CAAC,IAAD,CAAzD,GAAkEA,WAAW,CAAC,KAAD,CAA7E;AACD,GALD;;AAOA,SAAOD,QAAP;AACD,CArBM","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useCheckBottom = () => {\r\n  const [isBottom, setIsBottom] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    console.log('mount')\r\n    window.addEventListener('scroll', windowScroll)\r\n    \r\n    return () => {\r\n      console.log('unmount')\r\n      window.removeEventListener('scroll', windowScroll)\r\n    }\r\n  }, [])\r\n  \r\n  const windowScroll = () => {\r\n    const windowBottomPosition = window.scrollY + window.innerHeight\r\n    const pageBottomPosition = document.getElementsByTagName('main')[0].offsetHeight\r\n  \r\n    windowBottomPosition === pageBottomPosition ? setIsBottom(true) : setIsBottom(false)\r\n  }\r\n  \r\n  return isBottom\r\n}\r\n"]},"metadata":{},"sourceType":"module"}