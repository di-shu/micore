{"ast":null,"code":"import _extends from \"@babel/runtime-corejs2/helpers/esm/extends\";\nvar _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Projects\\\\SectionSlider.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Slider from 'react-slick';\nvar SliderConfigs = {\n  speed: 800,\n  dots: true,\n  arrows: false,\n  slidesToScroll: 1,\n  customPaging: function customPaging() {\n    return __jsx(\"div\", {\n      className: \"custom-dot\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9\n      },\n      __self: this\n    }));\n  }\n};\nexport var SectionSlider = function SectionSlider(props) {\n  var _props$slidesToShow = props.slidesToShow,\n      slidesToShow = _props$slidesToShow === void 0 ? 1 : _props$slidesToShow,\n      slides = props.slides,\n      className = props.className;\n  return __jsx(\"div\", {\n    className: \"section-slider-wrap \".concat(className ? className : ''),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, __jsx(Slider, _extends({\n    slidesToShow: slidesToShow\n  }, SliderConfigs, props, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), slides && slides.map(function (slide, index) {\n    return __jsx(\"div\", {\n      key: \"slide_\".concat(index),\n      className: \"slide-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"slide-image-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 24\n      },\n      __self: this\n    }, __jsx(\"img\", {\n      src: slide.img,\n      alt: \"Slide_\".concat(index),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    })));\n  })));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Projects/SectionSlider.js"],"names":["React","Slider","SliderConfigs","speed","dots","arrows","slidesToScroll","customPaging","SectionSlider","props","slidesToShow","slides","className","map","slide","index","img"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAEA,IAAMC,aAAa,GAAG;AACpBC,EAAAA,KAAK,EAAE,GADa;AAEpBC,EAAAA,IAAI,EAAE,IAFc;AAGpBC,EAAAA,MAAM,EAAE,KAHY;AAIpBC,EAAAA,cAAc,EAAE,CAJI;AAKpBC,EAAAA,YAAY,EAAE;AAAA,WAAM;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA4B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAA5B,CAAN;AAAA;AALM,CAAtB;AAQA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAAA,4BACUA,KADV,CAC9BC,YAD8B;AAAA,MAC9BA,YAD8B,oCACf,CADe;AAAA,MACZC,MADY,GACUF,KADV,CACZE,MADY;AAAA,MACJC,SADI,GACUH,KADV,CACJG,SADI;AAGtC,SACE;AAAK,IAAA,SAAS,gCAAyBA,SAAS,GAAGA,SAAH,GAAe,EAAjD,CAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,MAAD;AACE,IAAA,YAAY,EAAEF;AADhB,KAEMR,aAFN,EAGMO,KAHN;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAKGE,MAAM,IAAIA,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WACpB;AAAK,MAAA,GAAG,kBAAWA,KAAX,CAAR;AAA4B,MAAA,SAAS,EAAC,YAAtC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,GAAG,EAAED,KAAK,CAACE,GAAhB;AAAqB,MAAA,GAAG,kBAAWD,KAAX,CAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADoB;AAAA,GAAX,CALb,CADF,CADF;AAiBD,CApBM","sourcesContent":["import React from 'react'\r\nimport Slider from 'react-slick'\r\n\r\nconst SliderConfigs = {\r\n  speed: 800,\r\n  dots: true,\r\n  arrows: false,\r\n  slidesToScroll: 1,\r\n  customPaging: () => <div className=\"custom-dot\"><span/></div>\r\n}\r\n\r\nexport const SectionSlider = (props) => {\r\n  const { slidesToShow = 1, slides, className } = props\r\n  \r\n  return (\r\n    <div className={`section-slider-wrap ${className ? className : ''}`}>\r\n      <Slider\r\n        slidesToShow={slidesToShow}\r\n        {...SliderConfigs}\r\n        {...props}\r\n      >\r\n        {slides && slides.map((slide, index) => (\r\n          <div key={`slide_${index}`} className=\"slide-wrap\">\r\n            <div className=\"slide-image-wrap\">\r\n              <img src={slide.img} alt={`Slide_${index}`} />\r\n            </div>\r\n          </div>\r\n        ))}\r\n      </Slider>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}