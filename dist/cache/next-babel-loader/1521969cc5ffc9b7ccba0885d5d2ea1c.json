{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Services\\\\ServiceWorkStages.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport { isBrowser } from 'react-device-detect';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ImageWrapper, SectionLayout, SectionTitle } from '../../SectionsComponents';\nexport var ServiceWorkStages = function ServiceWorkStages(_ref) {\n  var stages = _ref.stages,\n      title = _ref.title;\n  return __jsx(SectionLayout, {\n    id: \"service-work-stages-section\",\n    Header: function Header() {\n      return __jsx(ImageWrapper, {\n        isDot: true,\n        display: isBrowser,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 9\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, __jsx(SectionTitle, {\n    title: title,\n    isContentWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }), __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, stages.map(function (stage, index) {\n    return __jsx(Col, {\n      key: \"work_stage_\".concat(index),\n      xs: 12,\n      md: index % 2 !== 0 ? {\n        offset: 1,\n        span: 5\n      } : 6,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"stage-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 14\n      },\n      __self: this\n    }, __jsx(ImageWrapper, {\n      src: stage.img,\n      className: \"stage-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15\n      },\n      __self: this\n    }), __jsx(\"p\", {\n      className: \"stage-name\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 16\n      },\n      __self: this\n    }, stage.name)));\n  })));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Services/ServiceWorkStages.js"],"names":["React","isBrowser","Row","Col","ImageWrapper","SectionLayout","SectionTitle","ServiceWorkStages","stages","title","map","stage","index","offset","span","img","name"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,qBAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,YAAT,EAAuBC,aAAvB,EAAsCC,YAAtC,QAA0D,0BAA1D;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,OAAuB;AAAA,MAApBC,MAAoB,QAApBA,MAAoB;AAAA,MAAZC,KAAY,QAAZA,KAAY;AACtD,SACE,MAAC,aAAD;AAAe,IAAA,EAAE,EAAC,6BAAlB;AAAgD,IAAA,MAAM,EAAE;AAAA,aAAM,MAAC,YAAD;AAAc,QAAA,KAAK,MAAnB;AAAoB,QAAA,OAAO,EAAER,SAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAAN;AAAA,KAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,KAAK,EAAEQ,KAArB;AAA4B,IAAA,cAAc,MAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE,MAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGD,MAAM,CAACE,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WACV,MAAC,GAAD;AAAK,MAAA,GAAG,uBAAgBA,KAAhB,CAAR;AAAiC,MAAA,EAAE,EAAE,EAArC;AAAyC,MAAA,EAAE,EAAEA,KAAK,GAAG,CAAR,KAAc,CAAd,GAAkB;AAAEC,QAAAA,MAAM,EAAE,CAAV;AAAaC,QAAAA,IAAI,EAAE;AAAnB,OAAlB,GAA2C,CAAxF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEH,KAAK,CAACI,GAAzB;AAA8B,MAAA,SAAS,EAAC,aAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,EAEE;AAAG,MAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA2BJ,KAAK,CAACK,IAAjC,CAFF,CADF,CADU;AAAA,GAAX,CADH,CAFF,CADF;AAeD,CAhBM","sourcesContent":["import React from 'react'\r\nimport { isBrowser } from 'react-device-detect'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { ImageWrapper, SectionLayout, SectionTitle } from '../../SectionsComponents'\r\n\r\nexport const ServiceWorkStages = ({ stages, title }) => {\r\n  return (\r\n    <SectionLayout id=\"service-work-stages-section\" Header={() => <ImageWrapper isDot display={isBrowser} />}>\r\n      <SectionTitle title={title} isContentWhite />\r\n      <Row>\r\n        {stages.map((stage, index) => (\r\n          <Col key={`work_stage_${index}`} xs={12} md={index % 2 !== 0 ? { offset: 1, span: 5 } : 6}>\r\n            <div className=\"stage-wrap\">\r\n              <ImageWrapper src={stage.img} className=\"stage-image\" />\r\n              <p className=\"stage-name\">{stage.name}</p>\r\n            </div>\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </SectionLayout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}