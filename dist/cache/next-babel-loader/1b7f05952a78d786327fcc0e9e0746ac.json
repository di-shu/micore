{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Projects\\\\ProjectsNavigation.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { useRouter } from 'next/router';\nimport { ActiveLink } from '../ActiveLink';\nimport { useDeviceDetect, useScrollDirection } from '../../../Helpers';\nexport const ProjectsNavigation = ({\n  links\n}) => {\n  const {\n    0: prev,\n    1: setPrev\n  } = useState('/');\n  const {\n    0: next,\n    1: setNext\n  } = useState('/');\n  const {\n    0: isBlack,\n    1: setIsBlack\n  } = useState(false);\n  const {\n    pathname\n  } = useRouter();\n  const {\n    mobile\n  } = useDeviceDetect();\n  const scrollDir = useScrollDirection();\n  useEffect(() => {\n    // eslint-disable-next-line array-callback-return\n    links.map((link, index) => {\n      if (link.link === pathname) {\n        setPrev(index === 0 ? links[links.length - 1].link : links[index - 1].link);\n        setNext(index === links.length - 1 ? links[0].link : links[index + 1].link);\n\n        if (link.isNavBlack) {\n          setIsBlack(true);\n        } else {\n          setIsBlack(false);\n        }\n      }\n    });\n  }, [pathname, links]);\n  return __jsx(\"div\", {\n    className: `navigation-wrap ${isBlack ? 'is-black' : ''} ${scrollDir === 'up' ? 'scroll-up' : scrollDir === 'down' ? 'scroll-down' : ''}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31\n    },\n    __self: this\n  }, __jsx(ActiveLink, {\n    link: prev,\n    scroll: false,\n    className: \"nav-el prev\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, mobile ? 'Prev' : 'Previous')), __jsx(ActiveLink, {\n    link: next,\n    scroll: false,\n    className: \"nav-el next\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }, \"Next\")));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Projects/ProjectsNavigation.js"],"names":["React","useEffect","useState","useRouter","ActiveLink","useDeviceDetect","useScrollDirection","ProjectsNavigation","links","prev","setPrev","next","setNext","isBlack","setIsBlack","pathname","mobile","scrollDir","map","link","index","length","isNavBlack"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,SAAT,QAA0B,aAA1B;AACA,SAASC,UAAT,QAA2B,eAA3B;AACA,SAASC,eAAT,EAA0BC,kBAA1B,QAAoD,kBAApD;AAEA,OAAO,MAAMC,kBAAkB,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AAC/C,QAAM;AAAA,OAACC,IAAD;AAAA,OAAOC;AAAP,MAAkBR,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM;AAAA,OAACS,IAAD;AAAA,OAAOC;AAAP,MAAkBV,QAAQ,CAAC,GAAD,CAAhC;AACA,QAAM;AAAA,OAACW,OAAD;AAAA,OAAUC;AAAV,MAAwBZ,QAAQ,CAAC,KAAD,CAAtC;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAeZ,SAAS,EAA9B;AACA,QAAM;AAAEa,IAAAA;AAAF,MAAaX,eAAe,EAAlC;AACA,QAAMY,SAAS,GAAGX,kBAAkB,EAApC;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACd;AACAO,IAAAA,KAAK,CAACU,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,KAAiB;AACzB,UAAID,IAAI,CAACA,IAAL,KAAcJ,QAAlB,EAA4B;AAC1BL,QAAAA,OAAO,CAACU,KAAK,KAAK,CAAV,GAAcZ,KAAK,CAACA,KAAK,CAACa,MAAN,GAAe,CAAhB,CAAL,CAAwBF,IAAtC,GAA6CX,KAAK,CAACY,KAAK,GAAG,CAAT,CAAL,CAAiBD,IAA/D,CAAP;AACAP,QAAAA,OAAO,CAACQ,KAAK,KAAKZ,KAAK,CAACa,MAAN,GAAe,CAAzB,GAA6Bb,KAAK,CAAC,CAAD,CAAL,CAASW,IAAtC,GAA6CX,KAAK,CAACY,KAAK,GAAG,CAAT,CAAL,CAAiBD,IAA/D,CAAP;;AAEA,YAAIA,IAAI,CAACG,UAAT,EAAqB;AACnBR,UAAAA,UAAU,CAAC,IAAD,CAAV;AACD,SAFD,MAEO;AACLA,UAAAA,UAAU,CAAC,KAAD,CAAV;AACD;AACF;AACF,KAXD;AAYD,GAdQ,EAcN,CAACC,QAAD,EAAWP,KAAX,CAdM,CAAT;AAgBA,SACE;AAAK,IAAA,SAAS,EAAG,mBAAkBK,OAAO,GAAG,UAAH,GAAgB,EAAG,IAAGI,SAAS,KAAK,IAAd,GAAqB,WAArB,GAAmCA,SAAS,KAAK,MAAd,GAAuB,aAAvB,GAAuC,EAAG,EAA7I;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAER,IAAlB;AAAwB,IAAA,MAAM,EAAE,KAAhC;AAAuC,IAAA,SAAS,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAOO,MAAM,GAAG,MAAH,GAAY,UAAzB,CADF,CADF,EAIE,MAAC,UAAD;AAAY,IAAA,IAAI,EAAEL,IAAlB;AAAwB,IAAA,MAAM,EAAE,KAAhC;AAAuC,IAAA,SAAS,EAAC,aAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAJF,CADF;AAUD,CAlCM","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { useRouter } from 'next/router'\r\nimport { ActiveLink } from '../ActiveLink'\r\nimport { useDeviceDetect, useScrollDirection } from '../../../Helpers'\r\n\r\nexport const ProjectsNavigation = ({ links }) => {\r\n  const [prev, setPrev] = useState('/')\r\n  const [next, setNext] = useState('/')\r\n  const [isBlack, setIsBlack] = useState(false)\r\n  const { pathname } = useRouter()\r\n  const { mobile } = useDeviceDetect()\r\n  const scrollDir = useScrollDirection()\r\n  \r\n  useEffect(() => {\r\n    // eslint-disable-next-line array-callback-return\r\n    links.map((link, index) => {\r\n      if (link.link === pathname) {\r\n        setPrev(index === 0 ? links[links.length - 1].link : links[index - 1].link)\r\n        setNext(index === links.length - 1 ? links[0].link : links[index + 1].link)\r\n        \r\n        if (link.isNavBlack) {\r\n          setIsBlack(true)\r\n        } else {\r\n          setIsBlack(false)\r\n        }\r\n      }\r\n    })\r\n  }, [pathname, links])\r\n  \r\n  return (\r\n    <div className={`navigation-wrap ${isBlack ? 'is-black' : ''} ${scrollDir === 'up' ? 'scroll-up' : scrollDir === 'down' ? 'scroll-down' : ''}`}>\r\n      <ActiveLink link={prev} scroll={false} className=\"nav-el prev\">\r\n        <span>{mobile ? 'Prev' : 'Previous'}</span>\r\n      </ActiveLink>\r\n      <ActiveLink link={next} scroll={false} className=\"nav-el next\">\r\n        <span>Next</span>\r\n      </ActiveLink>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}