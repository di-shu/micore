{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\Tab\\\\TabWrap.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport styled from 'styled-components';\nimport Tab from 'react-bootstrap/Tab';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport Nav from 'react-bootstrap/Nav';\nimport Card from 'react-bootstrap/Card';\nimport Accordion from 'react-bootstrap/Accordion';\nimport { ActiveLink, ImageWrapper } from '../SectionsComponents';\nimport { AnimationClass, useDeviceDetect } from '../../Helpers';\nconst CardWrap = styled(Col).withConfig({\n  displayName: \"TabWrap__CardWrap\",\n  componentId: \"mv6inv-0\"\n})([\"height:200px;display:flex;align-items:flex-end;overflow:hidden;&:before{content:'';position:absolute;top:0;left:0;right:0;bottom:0;width:100%;height:100%;transform:translateX(0);transition:all 1s cubic-bezier(0.64,0.04,0.35,1);transition-delay:\", \"s;background-color:#10151b;z-index:5;}\"], props => props.delay);\nexport const TabWrap = ({\n  animation,\n  tabs,\n  isSlice,\n  isSkills\n}) => {\n  const getProjects = arr => isSlice ? arr : arr.slice(0, 6);\n\n  const {\n    mobile,\n    desktop\n  } = useDeviceDetect();\n  useEffect(() => {\n    tabs.map(tab => tab.content && tab.content.map(content => content.delay = Number(Math.random().toFixed(2))));\n  }, []);\n  return __jsx(Tab.Container, {\n    id: \"portfolio-tabs\",\n    defaultActiveKey: tabs[0].key,\n    transition: false,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(Nav, {\n    variant: \"pills\",\n    className: AnimationClass({\n      animation,\n      className: 'tab-wrap'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, tabs.map((tab, index) => __jsx(Nav.Item, {\n    key: `${tab.key}_${index}`,\n    className: \"tab-item\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47\n    },\n    __self: this\n  }, __jsx(Nav.Link, {\n    eventKey: tab.key,\n    className: \"tab-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48\n    },\n    __self: this\n  }, tab.label)))), __jsx(Tab.Content, {\n    className: AnimationClass({\n      animation,\n      className: 'tab-content-wrap'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52\n    },\n    __self: this\n  }, tabs.map((tab, index) => __jsx(Tab.Pane, {\n    key: `tab_${index}`,\n    eventKey: tab.key,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54\n    },\n    __self: this\n  }, isSkills ? __jsx(Accordion, {\n    defaultActiveKey: tab.content[0].value,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 56\n    },\n    __self: this\n  }, tab.content.map((content, index) => __jsx(Card, {\n    key: `skill_${index}`,\n    className: \"skill-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58\n    },\n    __self: this\n  }, __jsx(Card.Header, {\n    className: \"skill-header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59\n    },\n    __self: this\n  }, __jsx(Accordion.Toggle, {\n    as: Card.Header,\n    eventKey: mobile ? content.value : 'panel1',\n    className: \"skill-toggle\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"skill-name\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61\n    },\n    __self: this\n  }, content.name), __jsx(ImageWrapper, {\n    src: content.icon,\n    className: \"skill-icon\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62\n    },\n    __self: this\n  }))), __jsx(Accordion.Collapse, {\n    eventKey: mobile ? content.value : 'panel1',\n    className: \"skill-collapse\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 65\n    },\n    __self: this\n  }, __jsx(Card.Body, {\n    className: \"skill-body\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 66\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    className: \"skill-description\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67\n    },\n    __self: this\n  }, content.description)))))) : __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74\n    },\n    __self: this\n  }, tab.content && getProjects(tab.content).map((content, index) => __jsx(CardWrap, {\n    key: `card_${index}`,\n    xs: content.size.xs,\n    md: content.size.md,\n    lg: content.size.lg,\n    xl: content.size.xl,\n    delay: content.delay,\n    className: AnimationClass({\n      animation,\n      className: 'card-wrap'\n    }),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76\n    },\n    __self: this\n  }, __jsx(ActiveLink, {\n    link: content.link,\n    className: \"project-nav-link\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85\n    },\n    __self: this\n  }), __jsx(ImageWrapper, {\n    src: content.img,\n    className: \"project-image\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86\n    },\n    __self: this\n  }), __jsx(\"h6\", {\n    className: \"project-title\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87\n    },\n    __self: this\n  }, content.title), desktop && __jsx(\"p\", {\n    className: \"project-link\",\n    children: \"View project\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88\n    },\n    __self: this\n  }))))))));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/Tab/TabWrap.js"],"names":["React","useEffect","styled","Tab","Row","Col","Nav","Card","Accordion","ActiveLink","ImageWrapper","AnimationClass","useDeviceDetect","CardWrap","props","delay","TabWrap","animation","tabs","isSlice","isSkills","getProjects","arr","slice","mobile","desktop","map","tab","content","Number","Math","random","toFixed","key","className","index","label","value","Header","name","icon","description","size","xs","md","lg","xl","link","img","title"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react'\r\nimport styled from 'styled-components'\r\nimport Tab from 'react-bootstrap/Tab'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Nav from 'react-bootstrap/Nav'\r\nimport Card from 'react-bootstrap/Card'\r\nimport Accordion from 'react-bootstrap/Accordion'\r\nimport { ActiveLink, ImageWrapper } from '../SectionsComponents'\r\nimport { AnimationClass, useDeviceDetect } from '../../Helpers'\r\n\r\nconst CardWrap = styled(Col)`\r\n  height: 200px;\r\n  display: flex;\r\n  align-items: flex-end;\r\n  overflow: hidden;\r\n\r\n  &:before {\r\n    content: '';\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    width: 100%;\r\n    height: 100%;\r\n    transform: translateX(0);\r\n    transition: all 1s cubic-bezier(0.64, 0.04, 0.35, 1);\r\n    transition-delay: ${props => props.delay}s;\r\n    background-color: #10151b;\r\n    z-index: 5;\r\n  }\r\n`\r\n\r\nexport const TabWrap = ({ animation, tabs, isSlice, isSkills }) => {\r\n  const getProjects = (arr) => isSlice ? arr : arr.slice(0, 6)\r\n  const { mobile, desktop } = useDeviceDetect()\r\n  \r\n  useEffect(() => {\r\n    tabs.map((tab) => tab.content && tab.content.map((content) => content.delay = Number(Math.random().toFixed(2))))\r\n  }, [])\r\n  \r\n  return (\r\n    <Tab.Container id=\"portfolio-tabs\" defaultActiveKey={tabs[0].key} transition={false}>\r\n      <Nav variant=\"pills\" className={AnimationClass({ animation, className: 'tab-wrap' })}>\r\n        {tabs.map((tab, index) => (\r\n          <Nav.Item key={`${tab.key}_${index}`} className=\"tab-item\">\r\n            <Nav.Link eventKey={tab.key} className=\"tab-link\">{tab.label}</Nav.Link>\r\n          </Nav.Item>\r\n        ))}\r\n      </Nav>\r\n      <Tab.Content className={AnimationClass({ animation, className: 'tab-content-wrap' })}>\r\n        {tabs.map((tab, index) => (\r\n          <Tab.Pane key={`tab_${index}`} eventKey={tab.key}>\r\n            {isSkills ? (\r\n              <Accordion defaultActiveKey={tab.content[0].value}>\r\n                {tab.content.map((content, index) => (\r\n                  <Card key={`skill_${index}`} className=\"skill-row\">\r\n                    <Card.Header className=\"skill-header\">\r\n                      <Accordion.Toggle as={Card.Header} eventKey={mobile ? content.value : 'panel1'} className=\"skill-toggle\">\r\n                        <p className=\"skill-name\">{content.name}</p>\r\n                        <ImageWrapper src={content.icon} className=\"skill-icon\"/>\r\n                      </Accordion.Toggle>\r\n                    </Card.Header>\r\n                    <Accordion.Collapse eventKey={mobile ? content.value: 'panel1'} className=\"skill-collapse\">\r\n                      <Card.Body className=\"skill-body\">\r\n                        <p className=\"skill-description\">{content.description}</p>\r\n                      </Card.Body>\r\n                    </Accordion.Collapse>\r\n                  </Card>\r\n                ))}\r\n              </Accordion>\r\n            ) : (\r\n              <Row>\r\n                {tab.content && getProjects(tab.content).map((content, index) => (\r\n                  <CardWrap\r\n                    key={`card_${index}`}\r\n                    xs={content.size.xs}\r\n                    md={content.size.md}\r\n                    lg={content.size.lg}\r\n                    xl={content.size.xl}\r\n                    delay={content.delay}\r\n                    className={AnimationClass({ animation, className: 'card-wrap' })}\r\n                  >\r\n                    <ActiveLink link={content.link} className=\"project-nav-link\"/>\r\n                    <ImageWrapper src={content.img} className=\"project-image\"/>\r\n                    <h6 className=\"project-title\">{content.title}</h6>\r\n                    {desktop && <p className=\"project-link\" children=\"View project\"/>}\r\n                  </CardWrap>\r\n                ))}\r\n              </Row>\r\n            )}\r\n          </Tab.Pane>\r\n        ))}\r\n      </Tab.Content>\r\n    </Tab.Container>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}