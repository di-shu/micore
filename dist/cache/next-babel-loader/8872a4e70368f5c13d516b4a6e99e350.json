{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Services\\\\ServicePriceMiscalculations.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Row from 'react-bootstrap/Row';\nimport Col from 'react-bootstrap/Col';\nimport { ImageWrapper, SectionDesc, SectionLayout, SectionTitle } from '../../SectionsComponents';\nexport var ServicePriceMiscalculations = function ServicePriceMiscalculations(_ref) {\n  var priceDesc = _ref.priceDesc,\n      stages = _ref.stages,\n      _ref$isPrice = _ref.isPrice,\n      isPrice = _ref$isPrice === void 0 ? true : _ref$isPrice;\n  return __jsx(SectionLayout, {\n    id: \"service-price-miscalculation\",\n    Header: function Header() {\n      return __jsx(ImageWrapper, {\n        isDot: true,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 8\n        },\n        __self: this\n      });\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 8\n    },\n    __self: this\n  }, isPrice && __jsx(Row, {\n    className: \"price-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, __jsx(SectionTitle, {\n    title: \"\\u0426\\u0435\\u043D\\u044B\",\n    className: \"price-title\",\n    isContentWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12\n    },\n    __self: this\n  })), __jsx(Col, {\n    xs: 12,\n    lg: 6,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14\n    },\n    __self: this\n  }, __jsx(SectionDesc, {\n    isContentWhite: true,\n    className: \"price-desc\",\n    children: priceDesc,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15\n    },\n    __self: this\n  }))), __jsx(Row, {\n    className: \"miscalculations-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }, __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, __jsx(SectionTitle, {\n    title: \"\\u042D\\u0442\\u0430\\u043F\\u044B \\u043F\\u0440\\u043E\\u0441\\u0447\\u0435\\u0442\\u0430\",\n    className: \"miscalculations-title\",\n    isContentWhite: true,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21\n    },\n    __self: this\n  })), __jsx(Col, {\n    xs: 12,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, __jsx(Row, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, stages && stages.map(function (_ref2, index) {\n    var title = _ref2.title,\n        desc = _ref2.desc;\n    return __jsx(Col, {\n      key: \"stage_\".concat(index),\n      className: \"col-stage\",\n      xs: 12,\n      md: 6,\n      lg: 4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 26\n      },\n      __self: this\n    }, __jsx(SectionTitle, {\n      title: __jsx(React.Fragment, null, __jsx(\"span\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }, index + 1), \" \", title),\n      className: \"stage-title\",\n      isContentWhite: true,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }), __jsx(SectionDesc, {\n      children: desc,\n      isContentWhite: true,\n      className: \"stage-desc\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }));\n  })))));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Services/ServicePriceMiscalculations.js"],"names":["React","Row","Col","ImageWrapper","SectionDesc","SectionLayout","SectionTitle","ServicePriceMiscalculations","priceDesc","stages","isPrice","map","index","title","desc"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport Row from 'react-bootstrap/Row'\r\nimport Col from 'react-bootstrap/Col'\r\nimport { ImageWrapper, SectionDesc, SectionLayout, SectionTitle } from '../../SectionsComponents'\r\n\r\nexport const ServicePriceMiscalculations = ({ priceDesc, stages, isPrice = true }) => {\r\n  return (\r\n    <SectionLayout id=\"service-price-miscalculation\" Header={() => <ImageWrapper isDot />}>\r\n      {isPrice && (\r\n        <Row className=\"price-wrap\">\r\n          <Col xs={12} lg={6}>\r\n            <SectionTitle title=\"Цены\" className=\"price-title\" isContentWhite />\r\n          </Col>\r\n          <Col xs={12} lg={6}>\r\n            <SectionDesc isContentWhite className=\"price-desc\" children={priceDesc} />\r\n          </Col>\r\n        </Row>\r\n      )}\r\n      <Row className=\"miscalculations-wrap\">\r\n        <Col xs={12}>\r\n          <SectionTitle title=\"Этапы просчета\" className=\"miscalculations-title\" isContentWhite />\r\n        </Col>\r\n        <Col xs={12}>\r\n          <Row>\r\n            {stages && stages.map(({ title, desc }, index) => (\r\n              <Col key={`stage_${index}`} className=\"col-stage\" xs={12} md={6} lg={4}>\r\n                <SectionTitle title={<><span>{index + 1}</span> {title}</>} className=\"stage-title\" isContentWhite />\r\n                <SectionDesc children={desc} isContentWhite className=\"stage-desc\" />\r\n              </Col>\r\n            ))}\r\n          </Row>\r\n        </Col>\r\n      </Row>\r\n    </SectionLayout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}