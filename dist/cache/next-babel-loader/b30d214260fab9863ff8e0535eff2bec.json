{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Projects\\\\ProjectColor.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\nimport { ImageWrapper } from '../ImageWrapper';\n\nvar GetCountAffix = function GetCountAffix(count) {\n  switch (count + 1) {\n    case 1:\n      return 'st';\n\n    case 2:\n      return 'nd';\n\n    case 3:\n      return 'rd';\n\n    default:\n      return 'th';\n  }\n};\n\nexport var ProjectColor = function ProjectColor(_ref) {\n  var colors = _ref.colors;\n  return __jsx(Row, {\n    className: \"colors-row\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20\n    },\n    __self: this\n  }, colors && colors.map(function (color, index) {\n    return __jsx(Col, {\n      key: index,\n      xs: 12,\n      lg: color.size ? color.size : 4,\n      className: \"col-item-color\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 22\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      className: \"color-info-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23\n      },\n      __self: this\n    }, color.image ? __jsx(ImageWrapper, {\n      src: color.image,\n      className: \"color-image\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 25\n      },\n      __self: this\n    }) : __jsx(\"div\", {\n      className: \"color-wrap \".concat(color.name),\n      style: {\n        background: color.background || color.hex\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 27\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"color-text\",\n      style: {\n        color: color.textColor\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28\n      },\n      __self: this\n    }, index + 1, GetCountAffix(index))), __jsx(\"div\", {\n      className: \"info-wrap\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"p\", {\n      className: \"info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, color.colorName), __jsx(\"p\", {\n      className: \"info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, color.hex), __jsx(\"p\", {\n      className: \"info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, color.CMYK), __jsx(\"p\", {\n      className: \"info-text\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }, color.fullName))));\n  }));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Projects/ProjectColor.js"],"names":["React","Col","Row","ImageWrapper","GetCountAffix","count","ProjectColor","colors","map","color","index","size","image","name","background","hex","textColor","colorName","CMYK","fullName"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEA,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,KAAD,EAAW;AAC/B,UAAQA,KAAK,GAAG,CAAhB;AACE,SAAK,CAAL;AACE,aAAO,IAAP;;AACF,SAAK,CAAL;AACE,aAAO,IAAP;;AACF,SAAK,CAAL;AACE,aAAO,IAAP;;AACF;AAAS,aAAO,IAAP;AAPX;AASD,CAVD;;AAYA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,OAAgB;AAAA,MAAbC,MAAa,QAAbA,MAAa;AAC1C,SACE,MAAC,GAAD;AAAK,IAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,MAAM,IAAIA,MAAM,CAACC,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA,WACpB,MAAC,GAAD;AAAK,MAAA,GAAG,EAAEA,KAAV;AAAiB,MAAA,EAAE,EAAE,EAArB;AAAyB,MAAA,EAAE,EAAED,KAAK,CAACE,IAAN,GAAaF,KAAK,CAACE,IAAnB,GAA0B,CAAvD;AAA0D,MAAA,SAAS,EAAC,gBAApE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACGF,KAAK,CAACG,KAAN,GACC,MAAC,YAAD;AAAc,MAAA,GAAG,EAAEH,KAAK,CAACG,KAAzB;AAAgC,MAAA,SAAS,EAAC,aAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADD,GAGC;AAAK,MAAA,SAAS,uBAAgBH,KAAK,CAACI,IAAtB,CAAd;AAA4C,MAAA,KAAK,EAAE;AAAEC,QAAAA,UAAU,EAAEL,KAAK,CAACK,UAAN,IAAoBL,KAAK,CAACM;AAAxC,OAAnD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,YAAb;AAA0B,MAAA,KAAK,EAAE;AAAEN,QAAAA,KAAK,EAAEA,KAAK,CAACO;AAAf,OAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA8DN,KAAK,GAAG,CAAtE,EAAyEN,aAAa,CAACM,KAAD,CAAtF,CADF,CAJJ,EAQE;AAAK,MAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BD,KAAK,CAACQ,SAAhC,CADF,EAEE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BR,KAAK,CAACM,GAAhC,CAFF,EAGE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BN,KAAK,CAACS,IAAhC,CAHF,EAIE;AAAG,MAAA,SAAS,EAAC,WAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAA0BT,KAAK,CAACU,QAAhC,CAJF,CARF,CADF,CADoB;AAAA,GAAX,CADb,CADF;AAuBD,CAxBM","sourcesContent":["import React from 'react'\r\nimport Col from 'react-bootstrap/Col'\r\nimport Row from 'react-bootstrap/Row'\r\nimport { ImageWrapper } from '../ImageWrapper'\r\n\r\nconst GetCountAffix = (count) => {\r\n  switch (count + 1) {\r\n    case 1:\r\n      return 'st'\r\n    case 2:\r\n      return 'nd'\r\n    case 3:\r\n      return 'rd'\r\n    default: return 'th'\r\n  }\r\n}\r\n\r\nexport const ProjectColor = ({ colors }) => {\r\n  return (\r\n    <Row className=\"colors-row\">\r\n      {colors && colors.map((color, index) => (\r\n        <Col key={index} xs={12} lg={color.size ? color.size : 4} className=\"col-item-color\">\r\n          <div className=\"color-info-wrap\">\r\n            {color.image ? (\r\n              <ImageWrapper src={color.image} className=\"color-image\" />\r\n            ) : (\r\n              <div className={`color-wrap ${color.name}`} style={{ background: color.background || color.hex }}>\r\n                <p className=\"color-text\" style={{ color: color.textColor }}>{index + 1}{GetCountAffix(index)}</p>\r\n              </div>\r\n            )}\r\n            <div className=\"info-wrap\">\r\n              <p className=\"info-text\">{color.colorName}</p>\r\n              <p className=\"info-text\">{color.hex}</p>\r\n              <p className=\"info-text\">{color.CMYK}</p>\r\n              <p className=\"info-text\">{color.fullName}</p>\r\n            </div>\r\n          </div>\r\n        </Col>\r\n      ))}\r\n    </Row>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}