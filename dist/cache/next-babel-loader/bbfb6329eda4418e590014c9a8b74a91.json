{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Projects\\\\ProjectInfoWrap.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nexport const ProjectInfoWrap = ({\n  name,\n  year,\n  link,\n  children,\n  isProjectInfo\n}) => {\n  return __jsx(\"div\", {\n    className: `square-info-wrap ${isProjectInfo ? 'project-wrap' : 'content-wrap'}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"square-text-wrap\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6\n    },\n    __self: this\n  }, isProjectInfo ? __jsx(React.Fragment, null, __jsx(\"p\", {\n    className: \"square-info-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9\n    },\n    __self: this\n  }, \"Name - \", name), __jsx(\"p\", {\n    className: \"square-info-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 10\n    },\n    __self: this\n  }, \"Year - \", year), __jsx(\"p\", {\n    className: \"square-info-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, \"Link - \", __jsx(\"a\", {\n    target: \"_blank\",\n    rel: \"noopener noreferrer\",\n    href: `http://${link}`,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 11\n    },\n    __self: this\n  }, link))) : children));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Projects/ProjectInfoWrap.js"],"names":["React","ProjectInfoWrap","name","year","link","children","isProjectInfo"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,CAAC;AAAEC,EAAAA,IAAF;AAAQC,EAAAA,IAAR;AAAcC,EAAAA,IAAd;AAAoBC,EAAAA,QAApB;AAA8BC,EAAAA;AAA9B,CAAD,KAAmD;AAChF,SACE;AAAK,IAAA,SAAS,EAAG,oBAAmBA,aAAa,GAAG,cAAH,GAAoB,cAAe,EAApF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,kBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGA,aAAa,GACZ,4BACE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwCJ,IAAxC,CADF,EAEE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAwCC,IAAxC,CAFF,EAGE;AAAG,IAAA,SAAS,EAAC,kBAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBAAuC;AAAG,IAAA,MAAM,EAAC,QAAV;AAAmB,IAAA,GAAG,EAAC,qBAAvB;AAA6C,IAAA,IAAI,EAAG,UAASC,IAAK,EAAlE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsEA,IAAtE,CAAvC,CAHF,CADY,GAMVC,QAPN,CADF,CADF;AAaD,CAdM","sourcesContent":["import React from 'react'\r\n\r\nexport const ProjectInfoWrap = ({ name, year, link, children, isProjectInfo }) => {\r\n  return (\r\n    <div className={`square-info-wrap ${isProjectInfo ? 'project-wrap' : 'content-wrap'}`}>\r\n      <div className=\"square-text-wrap\">\r\n        {isProjectInfo ? (\r\n          <>\r\n            <p className=\"square-info-text\">Name - {name}</p>\r\n            <p className=\"square-info-text\">Year - {year}</p>\r\n            <p className=\"square-info-text\">Link - <a target=\"_blank\" rel=\"noopener noreferrer\" href={`http://${link}`}>{link}</a></p>\r\n          </>\r\n        ) : children}\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}