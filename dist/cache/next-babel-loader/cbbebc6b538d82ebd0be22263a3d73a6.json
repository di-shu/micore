{"ast":null,"code":"import { useEffect, useState } from 'react';\nexport const useCheckBottom = () => {\n  const {\n    0: isBottom,\n    1: setIsBottom\n  } = useState(false);\n  useEffect(() => {\n    window.addEventListener('scroll', windowScroll);\n    return () => {\n      window.removeEventListener('scroll', windowScroll);\n    };\n  }, []);\n\n  const windowScroll = () => {\n    const windowBottomPosition = Math.round(window.scrollY + window.innerHeight);\n    const pageBottomPosition = document.getElementsByTagName('main')[0].offsetHeight;\n\n    if (windowBottomPosition === pageBottomPosition) {\n      setIsBottom(true);\n    } else {\n      setIsBottom(false);\n    }\n  };\n\n  return isBottom;\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Helpers/useCheckBottom.js"],"names":["useEffect","useState","useCheckBottom","isBottom","setIsBottom","window","addEventListener","windowScroll","removeEventListener","windowBottomPosition","Math","round","scrollY","innerHeight","pageBottomPosition","document","getElementsByTagName","offsetHeight"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,OAAO,MAAMC,cAAc,GAAG,MAAM;AAClC,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BH,QAAQ,CAAC,KAAD,CAAxC;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdK,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCC,YAAlC;AAEA,WAAO,MAAM;AACXF,MAAAA,MAAM,CAACG,mBAAP,CAA2B,QAA3B,EAAqCD,YAArC;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT;;AAQA,QAAMA,YAAY,GAAG,MAAM;AACzB,UAAME,oBAAoB,GAAGC,IAAI,CAACC,KAAL,CAAWN,MAAM,CAACO,OAAP,GAAiBP,MAAM,CAACQ,WAAnC,CAA7B;AACA,UAAMC,kBAAkB,GAAGC,QAAQ,CAACC,oBAAT,CAA8B,MAA9B,EAAsC,CAAtC,EAAyCC,YAApE;;AAEA,QAAIR,oBAAoB,KAAKK,kBAA7B,EAAiD;AAC/CV,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD,KAFD,MAEO;AACLA,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;AACF,GATD;;AAWA,SAAOD,QAAP;AACD,CAvBM","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nexport const useCheckBottom = () => {\r\n  const [isBottom, setIsBottom] = useState(false)\r\n  \r\n  useEffect(() => {\r\n    window.addEventListener('scroll', windowScroll)\r\n    \r\n    return () => {\r\n      window.removeEventListener('scroll', windowScroll)\r\n    }\r\n  }, [])\r\n\r\n  const windowScroll = () => {\r\n    const windowBottomPosition = Math.round(window.scrollY + window.innerHeight)\r\n    const pageBottomPosition = document.getElementsByTagName('main')[0].offsetHeight\r\n\r\n    if (windowBottomPosition === pageBottomPosition) {\r\n      setIsBottom(true)\r\n    } else {\r\n      setIsBottom(false)\r\n    }\r\n  }\r\n  \r\n  return isBottom\r\n}\r\n"]},"metadata":{},"sourceType":"module"}