{"ast":null,"code":"function ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useEffect, useState } from 'react';\nconst InitState = {\n  mobile: false,\n  tablet: false,\n  laptop: false,\n  minWidthLaptop: false,\n  desktop: false\n};\nexport const useDeviceDetect = () => {\n  const {\n    0: device,\n    1: setDevice\n  } = useState(InitState);\n  useEffect(() => {\n    const width = window.innerWidth;\n\n    if (width > 0 && width < 576) {\n      setDevice(_objectSpread({}, InitState, {\n        mobile: true\n      }));\n    }\n\n    if (width > 767 && width < 991) {\n      setDevice(_objectSpread({}, InitState, {\n        tablet: true\n      }));\n    }\n\n    if (width > 992) {\n      setDevice(_objectSpread({}, InitState, {\n        minWidthLaptop: true\n      }));\n    }\n\n    if (width > 992 && width < 1199) {\n      setDevice(_objectSpread({}, InitState, {\n        laptop: true\n      }));\n    }\n\n    if (width > 1200) {\n      setDevice(_objectSpread({}, InitState, {\n        minWidthLaptop: true,\n        desktop: true\n      }));\n    }\n  }, []);\n  return device;\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Helpers/useDeviceDetect.js"],"names":["useEffect","useState","InitState","mobile","tablet","laptop","minWidthLaptop","desktop","useDeviceDetect","device","setDevice","width","window","innerWidth"],"mappings":";;;;;;AAAA,SAASA,SAAT,EAAoBC,QAApB,QAAoC,OAApC;AAEA,MAAMC,SAAS,GAAG;AAAEC,EAAAA,MAAM,EAAE,KAAV;AAAiBC,EAAAA,MAAM,EAAE,KAAzB;AAAgCC,EAAAA,MAAM,EAAE,KAAxC;AAA+CC,EAAAA,cAAc,EAAE,KAA/D;AAAsEC,EAAAA,OAAO,EAAE;AAA/E,CAAlB;AAEA,OAAO,MAAMC,eAAe,GAAG,MAAM;AACnC,QAAM;AAAA,OAACC,MAAD;AAAA,OAASC;AAAT,MAAsBT,QAAQ,CAACC,SAAD,CAApC;AAEAF,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMW,KAAK,GAAGC,MAAM,CAACC,UAArB;;AAEA,QAAIF,KAAK,GAAG,CAAR,IAAaA,KAAK,GAAG,GAAzB,EAA8B;AAC5BD,MAAAA,SAAS,mBAAMR,SAAN;AAAiBC,QAAAA,MAAM,EAAE;AAAzB,SAAT;AACD;;AAED,QAAIQ,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,GAA3B,EAAgC;AAC9BD,MAAAA,SAAS,mBAAMR,SAAN;AAAiBE,QAAAA,MAAM,EAAE;AAAzB,SAAT;AACD;;AAED,QAAIO,KAAK,GAAG,GAAZ,EAAiB;AACfD,MAAAA,SAAS,mBAAMR,SAAN;AAAiBI,QAAAA,cAAc,EAAE;AAAjC,SAAT;AACD;;AAED,QAAIK,KAAK,GAAG,GAAR,IAAeA,KAAK,GAAG,IAA3B,EAAiC;AAC/BD,MAAAA,SAAS,mBAAMR,SAAN;AAAiBG,QAAAA,MAAM,EAAE;AAAzB,SAAT;AACD;;AAED,QAAIM,KAAK,GAAG,IAAZ,EAAkB;AAChBD,MAAAA,SAAS,mBAAMR,SAAN;AAAiBI,QAAAA,cAAc,EAAE,IAAjC;AAAuCC,QAAAA,OAAO,EAAE;AAAhD,SAAT;AACD;AACF,GAtBQ,EAsBN,EAtBM,CAAT;AAwBA,SAAOE,MAAP;AACD,CA5BM","sourcesContent":["import { useEffect, useState } from 'react'\r\n\r\nconst InitState = { mobile: false, tablet: false, laptop: false, minWidthLaptop: false, desktop: false }\r\n\r\nexport const useDeviceDetect = () => {\r\n  const [device, setDevice] = useState(InitState)\r\n  \r\n  useEffect(() => {\r\n    const width = window.innerWidth\r\n  \r\n    if (width > 0 && width < 576) {\r\n      setDevice({ ...InitState, mobile: true })\r\n    }\r\n  \r\n    if (width > 767 && width < 991) {\r\n      setDevice({ ...InitState, tablet: true })\r\n    }\r\n  \r\n    if (width > 992) {\r\n      setDevice({ ...InitState, minWidthLaptop: true })\r\n    }\r\n  \r\n    if (width > 992 && width < 1199) {\r\n      setDevice({ ...InitState, laptop: true })\r\n    }\r\n  \r\n    if (width > 1200) {\r\n      setDevice({ ...InitState, minWidthLaptop: true, desktop: true })\r\n    }\r\n  }, [])\r\n  \r\n  return device\r\n}\r\n"]},"metadata":{},"sourceType":"module"}