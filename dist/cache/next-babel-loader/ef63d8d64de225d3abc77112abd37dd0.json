{"ast":null,"code":"var _jsxFileName = \"D:\\\\Documents\\\\micore-next-app\\\\src\\\\Components\\\\SectionsComponents\\\\Services\\\\ServiceQuote.js\";\nvar __jsx = React.createElement;\nimport React, { useEffect, useState } from 'react';\nimport { ImageWrapper, SectionLayout } from '../../SectionsComponents';\nconst QuoteCommas = '/Assets/Images/Services/LandingPage/QuoteCommas.svg';\nexport const ServiceQuote = ({\n  quotes\n}) => {\n  const {\n    0: emptyMsg,\n    1: setEmptyMsg\n  } = useState('');\n  const {\n    0: randQuote,\n    1: setRandQuote\n  } = useState('');\n  useEffect(() => {\n    setRandQuote(quotes[Math.floor(Math.random() * quotes.length)]);\n  }, []);\n\n  const handleGenerate = () => {\n    const getRandNumb = Math.floor(Math.random() * quotes.length);\n    const getRandQuote = quotes[getRandNumb];\n\n    if (quotes.length === 0) {\n      setEmptyMsg('Упс, цитатки кончились :(');\n    }\n\n    setRandQuote(getRandQuote);\n    quotes.splice(getRandNumb, 1);\n  };\n\n  return __jsx(SectionLayout, {\n    id: \"service-quote-section\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: \"quote-box\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, __jsx(ImageWrapper, {\n    src: QuoteCommas,\n    className: \"quote-commas\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    className: \"quote-text\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30\n    },\n    __self: this\n  }, emptyMsg ? emptyMsg : randQuote)), __jsx(\"button\", {\n    type: \"button\",\n    className: \"custom-btn\",\n    onClick: handleGenerate,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32\n    },\n    __self: this\n  }, \"\\u0421\\u0433\\u0435\\u043D\\u0435\\u0440\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C\")));\n};","map":{"version":3,"sources":["D:/Documents/micore-next-app/src/Components/SectionsComponents/Services/ServiceQuote.js"],"names":["React","useEffect","useState","ImageWrapper","SectionLayout","QuoteCommas","ServiceQuote","quotes","emptyMsg","setEmptyMsg","randQuote","setRandQuote","Math","floor","random","length","handleGenerate","getRandNumb","getRandQuote","splice"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,YAAT,EAAuBC,aAAvB,QAA4C,0BAA5C;AAEA,MAAMC,WAAW,GAAG,qDAApB;AAEA,OAAO,MAAMC,YAAY,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC1C,QAAM;AAAA,OAACC,QAAD;AAAA,OAAWC;AAAX,MAA0BP,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM;AAAA,OAACQ,SAAD;AAAA,OAAYC;AAAZ,MAA4BT,QAAQ,CAAC,EAAD,CAA1C;AAEAD,EAAAA,SAAS,CAAC,MAAM;AACdU,IAAAA,YAAY,CAACJ,MAAM,CAACK,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,MAAM,CAACQ,MAAlC,CAAD,CAAP,CAAZ;AACD,GAFQ,EAEN,EAFM,CAAT;;AAIA,QAAMC,cAAc,GAAG,MAAM;AAC3B,UAAMC,WAAW,GAAGL,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAgBP,MAAM,CAACQ,MAAlC,CAApB;AACA,UAAMG,YAAY,GAAGX,MAAM,CAACU,WAAD,CAA3B;;AAEA,QAAIV,MAAM,CAACQ,MAAP,KAAkB,CAAtB,EAAyB;AACvBN,MAAAA,WAAW,CAAC,2BAAD,CAAX;AACD;;AAEDE,IAAAA,YAAY,CAACO,YAAD,CAAZ;AACAX,IAAAA,MAAM,CAACY,MAAP,CAAcF,WAAd,EAA2B,CAA3B;AACD,GAVD;;AAYA,SACE,MAAC,aAAD;AAAe,IAAA,EAAE,EAAC,uBAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAC,WAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,YAAD;AAAc,IAAA,GAAG,EAAEZ,WAAnB;AAAgC,IAAA,SAAS,EAAC,cAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,EAEE;AAAG,IAAA,SAAS,EAAC,YAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAA2BG,QAAQ,GAAGA,QAAH,GAAcE,SAAjD,CAFF,CADF,EAKE;AAAQ,IAAA,IAAI,EAAC,QAAb;AAAsB,IAAA,SAAS,EAAC,YAAhC;AAA6C,IAAA,OAAO,EAAEM,cAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAsE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sFAAtE,CALF,CADF;AASD,CA7BM","sourcesContent":["import React, { useEffect, useState } from 'react'\r\nimport { ImageWrapper, SectionLayout } from '../../SectionsComponents'\r\n\r\nconst QuoteCommas = '/Assets/Images/Services/LandingPage/QuoteCommas.svg'\r\n\r\nexport const ServiceQuote = ({ quotes }) => {\r\n  const [emptyMsg, setEmptyMsg] = useState('')\r\n  const [randQuote, setRandQuote] = useState('')\r\n  \r\n  useEffect(() => {\r\n    setRandQuote(quotes[Math.floor(Math.random() * quotes.length)])\r\n  }, [])\r\n  \r\n  const handleGenerate = () => {\r\n    const getRandNumb = Math.floor(Math.random() * quotes.length)\r\n    const getRandQuote = quotes[getRandNumb]\r\n    \r\n    if (quotes.length === 0) {\r\n      setEmptyMsg('Упс, цитатки кончились :(')\r\n    }\r\n    \r\n    setRandQuote(getRandQuote)\r\n    quotes.splice(getRandNumb, 1)\r\n  }\r\n  \r\n  return (\r\n    <SectionLayout id=\"service-quote-section\">\r\n      <div className=\"quote-box\">\r\n        <ImageWrapper src={QuoteCommas} className=\"quote-commas\" />\r\n        <p className=\"quote-text\">{emptyMsg ? emptyMsg : randQuote}</p>\r\n      </div>\r\n      <button type=\"button\" className=\"custom-btn\" onClick={handleGenerate}><span>Сгенерировать</span></button>\r\n    </SectionLayout>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}