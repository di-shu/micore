{"version":3,"file":"static/webpack/static/development/pages/projects/pride-logistic.js.faaed83b285d321a7c69.hot-update.js","sources":["webpack:///./src/Components/SectionsComponents/MainWrapper.js","webpack:///./src/Helpers/useCheckRoute.js"],"sourcesContent":["import React, { useEffect } from 'react'\nimport { motion } from 'framer-motion'\nimport { Layout } from './Layout'\nimport { Portfolios } from '../Config'\nimport { FooterSection } from '../Sections'\nimport { useCheckRoute } from '../../Helpers'\nimport { ProjectsNavigation } from './Projects'\nimport { MyScrollAnimation } from './MyScrollAnimation'\n/* STYLES */\nimport '~/Styles/Static/general.scss'\nimport '~/Styles/Includes/index.scss'\nimport '~/Styles/Sections/Services/index.scss'\nimport '~/Styles/Sections/Projects/index.scss'\n\nconst easing = [0.64, 0.04, 0.35, 1]\nconst variants = {\n  exit: { opacity: 0, transition: { duration: 1, ease: easing } },\n  visible: { opacity: 1, transition: { duration: 1, ease: easing } },\n  hidden: { opacity: 0, transition: { duration: 1, ease: easing } }\n}\n\nexport const MainWrapper = ({ id, children }) => {\n  const { isProject, isServices , isManticore } = useCheckRoute()\n  \n  useEffect(() => {\n    setTimeout(() => {\n      window.scrollTo({ top: 0, left: 0 })\n    }, 100)\n  }, [])\n\n  return (\n    <Layout>\n      <main id={id} className=\"main-wrapper\">\n        <motion.div\n          exit=\"exit\"\n          initial=\"hidden\"\n          animate=\"visible\"\n          variants={variants}\n        >\n          <ProjectsNavigation links={Portfolios.getALl()}/>\n          {children}\n          {(isProject || isServices && !isManticore) && (\n            <MyScrollAnimation animationName=\"fadeIn\" offset={300}>\n              <FooterSection animation/>\n            </MyScrollAnimation>\n          )}\n        </motion.div>\n      </main>\n    </Layout>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport { useRouter } from 'next/router'\n\nexport const useCheckRoute = () => {\n  const [isProject, setIsProject] = useState(false)\n  const [isServices, setIsServices] = useState(false)\n  const [isManticore, setIsManticore] = useState(false)\n  const { pathname } = useRouter()\n\n  useEffect(() => {\n\n\n    if (pathname.includes('/projects/')) {\n      setTimeout(() => {\n        setIsProject(true)\n      }, 100)\n    } else {\n      setIsProject(false)\n    }\n\n    if (pathname.includes('/services/')) {\n      setTimeout(() => {\n        setIsServices(true)\n      }, 100)\n    } else {\n      setIsServices(false)\n    }\n\n    if (pathname.includes('/projects/manticore')) {\n      setTimeout(() => {\n        setIsManticore(true)\n      }, 100)\n    } else {\n      setIsManticore(false)\n    }\n\n  }, [])\n\n  return { isProject, isServices , isManticore}\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAHA;AAMA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AAJA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAOA;;;;;;;;;;;;AClDA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AACA;;;;A","sourceRoot":""}