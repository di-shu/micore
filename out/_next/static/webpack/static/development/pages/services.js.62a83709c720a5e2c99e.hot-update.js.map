{"version":3,"file":"static/webpack/static/development/pages/services.js.62a83709c720a5e2c99e.hot-update.js","sources":["webpack:///./src/Components/SectionsComponents/Services/ServiceQuote.js"],"sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { ImageWrapper, MyScrollAnimation, SectionLayout } from '../../SectionsComponents'\n\nconst QuoteCommas = '/images/Services/LandingPage/QuoteCommas.svg'\n\nexport const ServiceQuote = ({ quotes }) => {\n  const [randIndex, setRandIndex] = useState(0)\n  const [word, setWord] = useState('Упс, цитатки закончились :(');\n  \n  useEffect(() => {\n    // setRandIndex(Math.floor(Math.random() * quotes.length))\n\n  }, [])\n\n  const handleGenerate = () => {\n    const getRandNumb = Math.floor(Math.random() * quotes.length)\n    // const $quote = $('.quote-text')\n\n    // $quote.removeClass('show')\n    // $($quote[getRandNumb]).addClass('show')\n\n   if(quotes.length !== 0) {\n       setWord(quotes.pop())\n   } else {\n       setWord('Упс, цитатки закончились :(')\n   }\n  }\n  \n  return (\n    <SectionLayout id=\"service-quote-section\">\n      <div className=\"quote-box\">\n        <ImageWrapper src={QuoteCommas} className=\"quote-commas\"/>\n        <MyScrollAnimation delay={[0]}>\n          {/*{quotes.map((quote, index) =>*/}\n          {/*  <div key={`quote_${index}`} className={`quote-text ${index === 2 ? 'show' : ''}`}>*/}\n          {/*    {quote}*/}\n          {/*  </div>*/}\n          {/*)}*/}\n          {<div className=\"quote-text show\">\n            {word}\n          </div>}\n        </MyScrollAnimation>\n      </div>\n      <MyScrollAnimation delay={[200]}>\n        <button type=\"button\" className=\"custom-btn\" onClick={handleGenerate}><span>Сгенерировать</span></button>\n      </MyScrollAnimation>\n    </SectionLayout>\n  )\n}"],"mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AAEA;AAEA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAGA;AACA;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}