{"version":3,"file":"static/webpack/static/development/pages/services.js.9ffb123c822d37756cb7.hot-update.js","sources":["webpack:///./src/Components/SectionsComponents/Services/ServiceMainSection.js"],"sourcesContent":["import React, {useEffect, useRef, useState} from 'react'\nimport dynamic from 'next/dynamic'\nimport { ScrollBox } from '../ScrollBox'\nimport ReactHtmlParser from 'react-html-parser'\nimport { draw, setup, useDeviceDetect } from '../../../Helpers'\nimport { ImageWrapper, MyScrollAnimation, SectionDesc, SectionLayout, SectionTitle } from '../../SectionsComponents'\n\nconst Sketch = dynamic(() => import('react-p5'), { ssr: false })\n\nconst SectionHeader = ({ statue, options }) => {\n  const { desktop } = useDeviceDetect()\n    const [scrolled, setScrolled] = useState(true)\n    const wrapper = useRef(null);\n\n    const handleScroll = () => {\n        if(wrapper.current) {\n            const elem = wrapper.current;\n            if(window.scrollY > elem.getBoundingClientRect().height + 50) {\n                setScrolled(false)\n            } else if(window.scrollY < elem.getBoundingClientRect().height + 50) {\n                setScrolled(true)\n            }\n        }\n    }\n\n    useEffect(() => {\n        if(statue) {\n            console.log('ss')\n            document.addEventListener('scroll', handleScroll)\n        }\n    }, [])\n\n  return (\n    <>\n      <MyScrollAnimation delay={[400]}>\n        <ImageWrapper isDot/>\n      </MyScrollAnimation>\n      {desktop ? (\n        <MyScrollAnimation ref={wrapper} animationName=\"fadeIn\" delay={[600]}>\n            {scrolled ? <Sketch setup={setup(options)} draw={draw} className=\"section-image-wrap main-statue\"/> : ''}\n        </MyScrollAnimation>\n      ) : (\n        <MyScrollAnimation animationName=\"fadeIn\" delay={[600]}>\n          <ImageWrapper src={statue} className=\"main-statue\"/>\n        </MyScrollAnimation>\n      )}\n      <ScrollBox/>\n    </>\n  )\n}\n\nexport const ServiceMainSection = ({ title, desc, statue, statueParams }) => {\n  return (\n    <SectionLayout id=\"service-main-section\" Footer={() => <SectionHeader statue={statue} options={statueParams}/>}>\n      <MyScrollAnimation delay={[0, 200]}>\n        <SectionTitle title={title} main isContentWhite/>\n        <SectionDesc isContentWhite children={ReactHtmlParser(desc)}/>\n      </MyScrollAnimation>\n    </SectionLayout>\n  )\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;;;;A","sourceRoot":""}